-- Constants

local ENABLED = "✔️ "

local DISABLED = "❌ "

local BASE_ADDRESS = nil -- Should be defined elsewhere



-- API Request Function

function makeRequest(url, headers, body)

    local response = gg.makeRequest(url, headers, body)

    if not response then

        gg.alert("Houve um erro. Por favor contate o desenvolvedor.")

        os.exit()

    end

    return response

end


-- Weapon Functions

function toggleWeapon(weaponName, weaponId, ammoCount, slotsCount, addressOffset, statusVar)

    if statusVar == ENABLED then

        addWeaponItems(weaponName, 0, 0, 0, addressOffset)

        return DISABLED

    else

        addWeaponItems(weaponName, weaponId, ammoCount, slotsCount, addressOffset)

        return ENABLED

    end

end



function addWeaponItems(weaponName, idValue, firesValue, slotsValue, baseOffset)

    gg.addListItems({

        {

            address = BASE_ADDRESS + baseOffset,

            flags = gg.TYPE_DWORD,

            value = tostring(idValue),

            name = weaponName .. " ID",

            freeze = true,

            freezetype = gg.FREEZE_NORMAL

        },

        {

            address = BASE_ADDRESS + baseOffset + 8,

            flags = gg.TYPE_DWORD,

            value = tostring(firesValue),

            name = weaponName .. " FIRES COUNT",

            freeze = true,

            freezetype = gg.FREEZE_NORMAL

        },

        {

            address = BASE_ADDRESS + baseOffset + 12,

            flags = gg.TYPE_DWORD,

            value = tostring(slotsValue),

            name = weaponName .. " SLOTS COUNT",

            freeze = true,

            freezetype = gg.FREEZE_NORMAL

        }

    })

    gg.setVisible(false)

end



-- Health Functions

function setHealth(value)

    gg.setValues({

        {

            address = BASE_ADDRESS,

            flags = gg.TYPE_FLOAT,

            value = tostring(value)

        }

    })

end



function setArmor(value)

    gg.setValues({

        {

            address = BASE_ADDRESS + 8,

            flags = gg.TYPE_FLOAT,

            value = tostring(value)

        }

    })

end



function resetHealthAndArmor()

    setHealth(200.0)

    setArmor(100.0)

end



function healthMenu()

    local choice = gg.choice({

        "COMBATE MODE",

        "REGENERAR",

        "200 VIDA",

        "150 VIDA",

        "100 VIDA",

        "20 VIDA",

        "0 VIDA"

    })

    

    if choice == 1 then

        combatMode = true

        resetHealthAndArmor()

    elseif choice == 2 then

        resetHealthAndArmor()

    elseif choice == 3 then

        setHealth(200.0)

    elseif choice == 4 then

        setHealth(150.0)

    elseif choice == 5 then

        setHealth(100.0)

    elseif choice == 6 then

        setHealth(20.0)

    elseif choice == 7 then

        setHealth(0.0)

    end

end



function armorMenu()

    local choice = gg.choice({

        "150 COLETE",

        "100 COLETE",

        "0 COLETE"

    }, nil, "Selecione uma opção:")

    

    if choice == 1 then

        setArmor(150.0)

    elseif choice == 2 then

        setArmor(100.0)

    elseif choice == 3 then

        setArmor(0.0)

    end

end



-- Teleport Functions

function setCoordinates(x, y, z, address, flags)

    gg.setValues({

        {address = address + 96, flags = flags, value = x},

        {address = address + 100, flags = flags, value = y},

        {address = address + 104, flags = flags, value = z}

    })

    gg.clearResults()

end



function stopAutoFarm()

    local choice = gg.choice({

        "PARAR AUTO FARM",

        "CANCELAR"

    }, nil, "Selecione uma opção:")

    

    if choice == 1 then

        isAutoFarming = false

        showTeleportMenu()

    end

end



function teleportMenu()

    local choice = gg.choice({

        "FARM OBRA (REDUZIDO)",

        "OBRA",

        "MONTAGEM DE PNEUS",

        "MONTAGEM DE PNEUS (SAIR)",

        "CONCESSIONÁRIA ECONÔMICA",

        "CONCESSIONÁRIA MÉDIA",

        "IGREJA"

    }, nil, "Selecione uma opção:")

    

    gg.searchNumber("999.765625", gg.TYPE_FLOAT)

    local results = gg.getResults(1)

    

    if #results == 0 then return end

    

    local targetAddress = results[1].address

    local flags = results[1].flags

    gg.clearResults()

    

    if choice == 1 then

        isAutoFarming = true

        while isAutoFarming do

            setCoordinates("-305", "-2,264", "33", targetAddress, flags)

            gg.sleep(5000)

            setCoordinates("-288", "-2,229", "39", targetAddress, flags)

            gg.sleep(5000)

            setCoordinates("-320", "-2,256", "39", targetAddress, flags)

            gg.sleep(5000)

        end

    elseif choice == 2 then

        setCoordinates("-366", "-2,170", "33", targetAddress, flags)

    elseif choice == 3 then

        setCoordinates("966", "-1,843", "2", targetAddress, flags)

    elseif choice == 4 then

        setCoordinates("627", "-12", "1001", targetAddress, flags)

    elseif choice == 5 then

        setCoordinates("-1,325", "-2,728", "32", targetAddress, flags)

    elseif choice == 6 then

        setCoordinates("739", "-1,052", "2", targetAddress, flags)

    elseif choice == 7 then

        setCoordinates("-1,385", "-2,781", "33", targetAddress, flags)

    end

end



-- Weapons Menu

local weaponStatus = {

    desert = DISABLED,

    shotgun = DISABLED,

    mp5 = DISABLED,

    ak47 = DISABLED,

    m4 = DISABLED,

    bazooka = DISABLED

}



function weaponsMenu()

    local choice = gg.choice({

        weaponStatus.desert .. "DESERT",

        weaponStatus.shotgun .. "SHOTGUN",

        weaponStatus.mp5 .. "MP5",

        weaponStatus.ak47 .. "AK47",

        weaponStatus.m4 .. "M4",

        weaponStatus.bazooka .. "BAZUCA"

    }, nil, "Selecione uma arma:")

    

    if not choice then return end

    

    if choice == 1 then

        weaponStatus.desert = toggleWeapon("desert", 24, 7, 35, 196, weaponStatus.desert)

    elseif choice == 2 then

        weaponStatus.shotgun = toggleWeapon("shotgun", 25, 1, 30, 228, weaponStatus.shotgun)

    elseif choice == 3 then

        weaponStatus.mp5 = toggleWeapon("mp5", 29, 30, 60, 260, weaponStatus.mp5)

    elseif choice == 4 then

        weaponStatus.ak47 = toggleWeapon("ak47", 30, 30, 90, 292, weaponStatus.ak47)

        weaponStatus.m4 = DISABLED

    elseif choice == 5 then

        weaponStatus.m4 = toggleWeapon("m4", 31, 30, 90, 292, weaponStatus.m4)

        weaponStatus.ak47 = DISABLED

    elseif choice == 6 then

        gg.toast("Em breve...")

    end

end



-- Vehicle Functions

function repairVehicle()

    gg.clearResults()

    gg.searchNumber("300", gg.TYPE_FLOAT)

    gg.getResults(100)

    gg.editAll("1000", gg.TYPE_FLOAT)

    gg.clearResults()

end



-- Main Menu

function mainMenu()

    local choice = gg.choice({

        "MENU TELEPORTE",

        "MENU VIDA",

        "MENU COLETE",

        "MENU ARMAS",

        "RESTAURAR CARRO"

    }, nil, "Selecione uma opção:")

    

    if choice == 1 then

        teleportMenu()

    elseif choice == 2 then

        healthMenu()

    elseif choice == 3 then

        armorMenu()

    elseif choice == 4 then

        weaponsMenu()

    elseif choice == 5 then

        repairVehicle()

    end

end



-- Initialization

function init()

    gg.setVisible(false)

    isAutoFarming = false

    combatMode = false

    

    -- Find base address

    gg.searchNumber("7.5F;0.10000000149", gg.TYPE_FLOAT)

    local results = gg.getResults(1)

    if #results > 0 then

        BASE_ADDRESS = results[1].address - 32

        gg.clearResults()

        mainMenu()

    else

        gg.alert("Failed to find base address!")

        os.exit()

    end

    

    while true do

        if gg.isVisible() then

            gg.setVisible(false)

            mainMenu()

        end

        gg.sleep(50)

    end

end



-- Start the script

init()
